version: "3.4"

services:
  app-a:
    build: ./fastapi_app/
    ports:
      - "8000:8000"
    volumes:
      - ./fastapi_app:/app
    environment:
      APP_NAME: "app-a"
      MODE: "otel-collector-grpc"
      OTEL_GRPC_ENDPOINT: "otel-collector:4317"
      TARGET_ONE_HOST: "app-b"
      TARGET_TWO_HOST: "app-c"
  
  app-b:
    build: ./fastapi_app/
    ports:
      - "8001:8000"
    volumes:
      - ./fastapi_app:/app
    environment:
      APP_NAME: "app-b"
      MODE: "otel-collector-grpc"
      OTEL_GRPC_ENDPOINT: "otel-collector:4317"
      TARGET_ONE_HOST: "app-b"
      TARGET_TWO_HOST: "app-c"
  
  app-c:
    build: ./fastapi_app/
    ports:
      - "8002:8000"
    volumes:
      - ./fastapi_app:/app
    environment:
      APP_NAME: "app-c"
      MODE: "otel-collector-http"
      OTEL_HTTP_ENDPOINT: "http://otel-collector:4318/v1/traces"
      TARGET_ONE_HOST: "app-b"
      TARGET_TWO_HOST: "app-c"

  app-d:
    build: ./fastapi_app/
    ports:
      - "8003:8000"
    volumes:
      - ./fastapi_app:/app
    environment:
      APP_NAME: "app-d"
      MODE: "otel-collector-http"
      OTEL_HTTP_ENDPOINT: "http://otel-collector:4318/v1/traces"
      TARGET_ONE_HOST: "app-b"
      TARGET_TWO_HOST: "app-c"

  jaeger-collector:
    image: jaegertracing/jaeger-collector:1.47.0
    command: 
      - "--cassandra.keyspace=jaeger_v1_dc1"
      - "--cassandra.servers=cassandra"
      - "--sampling.initial-sampling-probability=.5"
      - "--sampling.target-samples-per-second=.01"
      - "--collector.otlp.enabled=true"
    environment: 
      - SAMPLING_CONFIG_TYPE=adaptive
    ports:
      - "4317" # accept OpenTelemetry Protocol (OTLP) over gRPC
      - "4318" # accept OpenTelemetry Protocol (OTLP) over HTTP
      - "14250" # accept model.proto
    restart: on-failure
    depends_on:
      - cassandra-schema

  cassandra:
    image: cassandra:4.1.2

  cassandra-schema:
    image: jaegertracing/jaeger-cassandra-schema:1.47.0
    depends_on:
      - cassandra

  jaeger-query:
    image: jaegertracing/jaeger-query:1.47.0
    environment:
      - METRICS_STORAGE_TYPE=prometheus
      - PROMETHEUS_SERVER_URL=http://prometheus:9090
      - PROMETHEUS_QUERY_SUPPORT_SPANMETRICS_CONNECTOR=true
      - PROMETHEUS_QUERY_DURATION_UNIT=s
    command:
      - "--cassandra.keyspace=jaeger_v1_dc1"
      - "--cassandra.servers=cassandra"
    ports:
      - "16686:16686"
      - "16687:16687"
    restart: on-failure
    depends_on:
      - cassandra-schema

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.81.0
    command:
      - "--config=/conf/config.yaml"
    volumes:
      - ./etc/otel-collector-config-spm.yaml:/conf/config.yaml
    ports:
      - "4317" # OTLP gRPC receiver
      - "4318" # OTLP http receiver
      - "8889" # Prometheus metrics exporter
    restart: on-failure
    depends_on:
      - jaeger-collector

  prometheus:
    image: prom/prometheus:v2.45.0
    ports:
      - "9090:9090"
    volumes:
      - ./etc/prometheus.yml:/workspace/prometheus.yml
    command:
      - --config.file=/workspace/prometheus.yml
